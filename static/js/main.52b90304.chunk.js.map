{"version":3,"sources":["components/Credits.module.css","utils.js","components/AccountBalance.js","components/Home.js","components/UserProfile.js","components/Login.js","components/AddCreditForm.js","components/Credits.js","components/Debits.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","calculateAccountBalance","creditList","debitList","reduce","acc","v","amount","roundToHundredths","num","Math","round","padZeroOnLeft","str","length","repeat","max","formatDateStr","dateStr","date","Date","year","getUTCFullYear","toString","month","getUTCMonth","day","getUTCDate","AccountBalance","this","props","accountBalance","Component","Home","src","alt","to","UserProfile","userName","memberSince","LogIn","handleChange","e","updatedUser","state","user","target","value","setState","handleSubmit","preventDefault","mockLogIn","redirect","password","onSubmit","type","name","defaultValue","onChange","AddCreditForm","useState","description","setDescription","setAmount","disableButton","useMemo","trim","htmlFor","id","Number","parseFloat","onClick","addCredit","disabled","Credits","credits","className","styles","map","credit","creditItem","creditAmount","Debits","debits","debit","slice","addDebit","App","logInInfo","newUser","currentUser","newCredit","crypto","randomUUID","toUTCString","newCreditList","newBalance","a","fetch","creditsRes","json","debitsRes","console","error","basename","exact","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.52b90304.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"creditList\":\"Credits_creditList__xiTWM\",\"creditItem\":\"Credits_creditItem__2MZhc\",\"creditAmount\":\"Credits_creditAmount__2zNe7\"};","export function calculateAccountBalance(creditList, debitList) {\n  const totalCredits = creditList.reduce((acc, v) => acc + v.amount, 0);\n  const totalDebits = debitList.reduce((acc, v) => acc + v.amount, 0);\n  return totalCredits - totalDebits;\n}\n\nexport function roundToHundredths(num) {\n  return Math.round(num * 100) / 100;\n}\n\nfunction padZeroOnLeft(str, length) {\n  return \"0\".repeat(Math.max(0, length - str.length)) + str;\n}\n\nexport function formatDateStr(dateStr) {\n  const date = new Date(dateStr);\n  const year = padZeroOnLeft(date.getUTCFullYear().toString(), 4);\n  const month = padZeroOnLeft(date.getUTCMonth().toString(), 2);\n  const day = padZeroOnLeft(date.getUTCDate().toString(), 2);\n  return `${year}-${month}-${day}`;\n}\n","/*==================================================\nsrc/components/AccountBalance.js\n\nThe AccountBalance component displays account balance. It is included in other page views.\n==================================================*/\nimport React, { Component } from \"react\";\nimport { roundToHundredths } from \"../utils\";\n\nclass AccountBalance extends Component {\n  // Display account balance\n  render() {\n    return <div>Balance: {roundToHundredths(this.props.accountBalance)}</div>;\n  }\n}\n\nexport default AccountBalance;\n","/*==================================================\nsrc/components/Home.js\n\nThe Home component is used to demonstrate the use of Link.\n==================================================*/\nimport React, {Component} from 'react';\nimport AccountBalance from './AccountBalance';\nimport {Link} from 'react-router-dom';\n\nclass Home extends Component {\n  render() {\n    return (\n      <div>\n        <img src=\"https://picsum.photos/200/200\" alt=\"bank\"/>\n\n        <h1>Bank of React</h1>\n\n        <Link to=\"/userProfile\">User Profile</Link>\n        <br/>\n        <Link to=\"/login\">Login</Link>\n        <br/>\n        <Link to=\"/credits\">Credits</Link>\n        <br/>\n        <Link to=\"/debits\">Debits (to be implemented in the Assignment)</Link>\n        <br/><br/>\n        <AccountBalance accountBalance={this.props.accountBalance}/>\n      </div>\n    );\n  }\n}\n\nexport default Home;","/*==================================================\nsrc/components/UserProfile.js\n\nThe UserProfile component is used to demonstrate the use of Route and Link.\nNote: You don't need to work on this file for the Assignment.\n==================================================*/\nimport React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\n\nclass UserProfile extends Component {\n  render() {\n    return (\n      <div>\n        <h1>User Profile</h1>\n\n        <div>Username: {this.props.userName}</div>\n        <div>Member Since: {this.props.memberSince}</div>\n        <br/>\n        <Link to=\"/\">Return to Home</Link>\n      </div>\n    );\n  }\n}\n\nexport default UserProfile;","/*==================================================\nsrc/components/Login.js\n\nThe LogIn component is used to demonstrate the use of Redirect.\nNote: You don't need to work on this file for the Assignment.\n==================================================*/\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport {Link} from 'react-router-dom';\n\nclass LogIn extends Component {\n  constructor (props) {  // Create and initialize state\n    super(props)\n    this.state = {\n      user: {\n        //userName: '',\n        userName: this.props.user.userName,  // Initialize userName using props input (currentUser in App.js)\n        password: ''\n      },\n      redirect: false  // Redirect property used to trigger Redirect\n    }\n  }\n\n  // When User Name input is changed, capture the new input value and update state\n  handleChange = (e) => {\n    const updatedUser = {...this.state.user};  // Create an object for state\n    updatedUser.userName = e.target.value;  // Set object's userName to the new input value\n    this.setState({user: updatedUser})  // Update state with object values\n  }\n\n  // When user clicked \"Log In\" button, store user data and then redirect to \"User Profile\" page\n  handleSubmit = (e) => {\n    e.preventDefault()\n    this.props.mockLogIn(this.state.user)  // Update state in the top-level component (App.js)\n    this.setState({redirect: true})  // Update state to trigger Redirect\n  }\n  \n  render () {\n    // Redirect to \"User Profile\" page when \"Log In\" button is clicked\n    if (this.state.redirect) {  \n      return (<Redirect to=\"/userProfile\"/>);\n    }\n\n    // Render the login form (and call \"handleSubmit\" method when \"Log In\" button is clicked to submit form)\n    return (\n      <div>\n        <h1>Login</h1>\n        \n        <form onSubmit={this.handleSubmit}>\n          <div>\n            <label>User Name</label>\n            <input type=\"text\" name=\"userName\" defaultValue={this.props.user.userName} onChange={this.handleChange} />\n          </div>\n          <div>\n            <label>Password</label>\n            <input type=\"password\" name=\"password\" />\n          </div>\n          <button>Log In</button>\n        </form>  \n        <br/>\n        <Link to=\"/\">Return to Home</Link>\n      </div>\n    );\n  }\n}\n\nexport default LogIn;","import React, { useMemo, useState } from \"react\";\n\nconst AddCreditForm = (props) => {\n  const [description, setDescription] = useState(\"\");\n  const [amount, setAmount] = useState(0);\n\n  const disableButton = useMemo(\n    () => amount <= 0 || description.trim() === \"\",\n    [amount, description]\n  );\n\n  const onSubmit = () => {\n    props.addCredit({ amount, description });\n    setAmount(0);\n    setDescription(\"\");\n  };\n\n  return (\n    <div>\n      <p>Add Credit</p>\n\n      <div>\n        <label htmlFor=\"description\">Description</label>\n        <input\n          type=\"text\"\n          id=\"description\"\n          value={description}\n          onChange={(e) => setDescription(e.target.value)}\n        />\n      </div>\n      <div>\n        <label htmlFor=\"amount\">Amount</label>\n        <input\n          type=\"number\"\n          id=\"amount\"\n          value={amount}\n          onChange={(e) => setAmount(Number.parseFloat(e.target.value))}\n        />\n      </div>\n\n      <button type=\"button\" onClick={onSubmit} disabled={disableButton}>\n        Add Credit\n      </button>\n    </div>\n  );\n};\n\nexport default AddCreditForm;\n","/*==================================================\nsrc/components/Credits.js\n\nThe Credits component contains information for Credits page view.\nNote: You need to work on this file for the Assignment.\n==================================================*/\nimport { Link } from \"react-router-dom\";\nimport AddCreditForm from \"./AddCreditForm\";\nimport { formatDateStr, roundToHundredths } from \"../utils\";\nimport styles from \"./Credits.module.css\";\n\nconst Credits = ({ credits, addCredit }) => {\n  return (\n    <div>\n      <h1>Credits</h1>\n      <br />\n      <div className={styles.creditList}>\n        {credits.map((credit) => (\n          <div key={credit.id} id={credit.id} className={styles.creditItem}>\n            <p className={styles.creditAmount}>\n              ${roundToHundredths(credit.amount)}\n            </p>\n            <p>Description: {credit.description}</p>\n            <p>Date: {formatDateStr(credit.date)}</p>\n          </div>\n        ))}\n      </div>\n      <br />\n      <AddCreditForm addCredit={addCredit} />\n      <br />\n      <Link to=\"/\">Return to Home</Link>\n    </div>\n  );\n};\n\nexport default Credits;\n","/*==================================================\nsrc/components/Debits.js\n\nThe Debits component contains information for Debits page view.\nNote: You need to work on this file for the Assignment.\n==================================================*/\nimport {Link} from 'react-router-dom';\n\nconst Debits = (props) => {\n  // Create the list of Debit items\n  let debitsView = () => {\n    const { debits } = props;\n    return debits.map((debit) => {  // Extract \"id\", \"amount\", \"description\" and \"date\" properties of each debits JSON array element\n      let date = debit.date.slice(0,10);\n      return <li key={debit.id}>{debit.amount} {debit.description} {date}</li>\n    });\n  }\n  // Render the list of Debit items and a form to input new Debit item\n  return (\n    <div>\n      <h1>Debits</h1>\n\n      {debitsView()}\n\n      <form onSubmit={props.addDebit}>\n        <input type=\"text\" name=\"description\" />\n        <input type=\"number\" name=\"amount\" />\n        <button type=\"submit\">Add Debit</button>\n      </form>\n      <br/>\n      <Link to=\"/\">Return to Home</Link>\n    </div>\n  );\n}\n\nexport default Debits;","/*==================================================\nsrc/App.js\n\nThis is the top-level component of the app.\nIt contains the top-level state.\n==================================================*/\nimport React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\n// Import other components\nimport Home from \"./components/Home\";\nimport UserProfile from \"./components/UserProfile\";\nimport LogIn from \"./components/Login\";\nimport Credits from \"./components/Credits\";\nimport Debits from \"./components/Debits\";\nimport { calculateAccountBalance } from \"./utils\";\n\nclass App extends Component {\n  constructor() {\n    // Create and initialize state\n    super();\n    this.state = {\n      accountBalance: 0,\n      creditList: [],\n      debitList: [],\n      currentUser: {\n        userName: \"Joe Smith\",\n        memberSince: \"11/22/99\",\n      },\n    };\n  }\n\n  async componentDidMount() {\n    try {\n      const creditsRes = await fetch(\n        \"https://johnnylaicode.github.io/api/credits.json\"\n      );\n      const creditList = await creditsRes.json();\n\n      const debitsRes = await fetch(\n        \"https://johnnylaicode.github.io/api/debits.json\"\n      );\n      const debitList = await debitsRes.json();\n\n      const accountBalance = calculateAccountBalance(creditList, debitList);\n\n      this.setState({\n        accountBalance,\n        creditList,\n        debitList,\n      });\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  // Update state's currentUser (userName) after \"Log In\" button is clicked\n  mockLogIn = (logInInfo) => {\n    const newUser = { ...this.state.currentUser };\n    newUser.userName = logInInfo.userName;\n    this.setState({ currentUser: newUser });\n  };\n\n  addCredit = ({ amount, description }) => {\n    const id = crypto.randomUUID();\n    const dateStr = new Date().toUTCString();\n    const newCredit = {\n      id,\n      date: dateStr,\n      amount,\n      description,\n    };\n    const newCreditList = [...this.state.creditList, newCredit];\n    const newBalance = this.state.accountBalance + amount;\n    this.setState({ creditList: newCreditList, accountBalance: newBalance });\n  };\n\n  // Create Routes and React elements to be rendered using React components\n  render() {\n    // Create React elements and pass input props to components\n    const HomeComponent = () => (\n      <Home accountBalance={this.state.accountBalance} />\n    );\n    const UserProfileComponent = () => (\n      <UserProfile\n        userName={this.state.currentUser.userName}\n        memberSince={this.state.currentUser.memberSince}\n      />\n    );\n    const LogInComponent = () => (\n      <LogIn user={this.state.currentUser} mockLogIn={this.mockLogIn} />\n    );\n    const CreditsComponent = () => (\n      <Credits credits={this.state.creditList} addCredit={this.addCredit} />\n    );\n    const DebitsComponent = () => <Debits debits={this.state.debitList} />;\n\n    // Important: Include the \"basename\" in Router, which is needed for deploying the React app to GitHub Pages\n    return (\n      <Router basename=\"/assignment-3\">\n        <div>\n          <Route exact path=\"/\" render={HomeComponent} />\n          <Route exact path=\"/userProfile\" render={UserProfileComponent} />\n          <Route exact path=\"/login\" render={LogInComponent} />\n          <Route exact path=\"/credits\" render={CreditsComponent} />\n          <Route exact path=\"/debits\" render={DebitsComponent} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/*==================================================\nsrc/index.js\n\nThis file renders the top-level component App which contains all components of the app).\n==================================================*/\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n// Note: In above, StrictMode is a tool for highlighting potential problems in an application. \n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}